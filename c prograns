// 1)  Implement Factorial of a number.



#include <stdio.h>
int factorial(int);
int main()
{
          int num,result; 
     printf("Enter a number to find it's Factorial : ");    
      scanf("%d", &num);
       if (num < 0)
      {
        printf("Factorial of negative number not possible\n");
      }
      else
     {
        result = factorial(num);
        printf("The Factorial of %d is %d.\n", num, result);
     }
return 0;
}
int factorial(int num)
{
if (num == 0 || num == 1)
{
return 1;
}
else
{
return(num * factorial(num - 1));
}
}









// 2) Find gcd of two numbers using euclids algorithm


#include <stdio.h>             
int gcd(int a, int b)
{
if (b == 0) return a;
return gcd(b, a % b);
}

int main()
{
int a ,b;
printf("Enter the value of a and b\n");
scanf("%d %d",&a,&b);
printf("GCD of %d and %d is %d ", a, b, gcd(a, b)); return 0;
}










// 3) Tower of Hanoi


#include <stdio.h>
#include <stdlib.h>

void hanoi(int n, char rodFrom, char rodMiddle, char rodTo)
{
    if(n==1)
   {
        printf("Disk 1 moved from %c to %c \n",rodFrom,rodTo);
        return;
    }
    hanoi(n-1,rodFrom,rodTo,rodMiddle);

    printf("Disk %d moved from %c to %c \n",n,rodFrom,rodTo);
    hanoi(n-1,rodMiddle,rodFrom,rodTo);
 
}
 int main()
{
    int n;
    printf("enter total number of disc\n");
    scanf("%d",&n);
    hanoi(n, 'A', 'B', 'C');
    return 0;
}










// 4)  bubble sort


#include<stdio.h>
int main()
{
    int array[100], n, i, j, temp; 
    printf("Enter number of elements\n");
    scanf("%d", &n); 
    printf("Enter %d Numbers:\n", n); 
    for(i = 0; i < n; i++)
        scanf("%d", &array[i]); 
    for(i = 0 ; i < n - 1; i++)
    {
        for(j = 0 ; j < n-i-1; j++)
        {
            if(array[j] > array[j+1]) 
            {
                temp=array[j];
                array[j]=array[j+1];
                array[j+1]=temp;
            }
        }
    } 

    printf("Sorted Array:\n"); 
    for(i = 0; i < n; i++)
        printf("%d\t", array[i]);
    return 0;
}











// 5) finding maximum and minimum element 


#include <stdio.h> 
int main()
{
    int i, n,max,min,arr[20];
    printf("Enter total number of elements(1 to 100): "); 
    scanf("%d", &n);
     printf("\n");
// Stores number entered by the user 
     for(i = 0; i < n; i++)
     {
    printf("Enter Number %d: ", i+1);   scanf("%d", &arr[i]);
     }
// Loop to find largest number
    max=arr[0];
    min=arr[0];
    for(i = 1; i < n; i++)
    {
    // Change < to > if you want to find the smallest element  
          if(arr[i] > max)
                        max = arr[i];
                  else if (arr[i]<min)
                         min=arr[i];
    }
    printf("\n MAX element = %d\n MIN element=%d\n  ", max,min); 
return 0;
}








// 6) Finding max element 


#include <stdio.h> 
int main()
{
int i, n;
float arr[100];
printf("Enter total number of elements(1 to 100): "); 
scanf("%d", &n);
printf("\n");
for(i = 0; i < n; ++i)
{
printf("Enter Number %d: ", i+1); 
scanf("%f", &arr[i]);
}
for(i = 1; i < n; ++i)
{
if(arr[0] < arr[i])
arr[0] = arr[i];
}
printf("Largest element = %.2f", arr[0]); 
return 0;
}









// 7) linear search/sequential search

#include<stdio.h> 
int main()
{
int array[100], search, c, number;
printf("Enter the number of elements in array\n"); 
scanf("%d",&number);
printf("Enter %d numbers\n", number); 
for ( c = 0 ; c < number ; c++ ) 
{
        printf("Enter the %d element : ",c+1);
    scanf("%d",&array[c]);
 }
printf("Enter the number to search\n"); 
scanf("%d",&search);
for ( c = 0 ; c < number ; c++ )
{
if ( array[c] == search ) 
{
printf("%d is present at location %d.\n", search, c+1); 
break;
}
}
if ( c == number )
printf("%d is not present in array.\n", search); 
return 0;
}
